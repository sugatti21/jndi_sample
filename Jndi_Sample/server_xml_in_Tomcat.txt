<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor
	license agreements. See the NOTICE file distributed with this work for additional
	information regarding copyright ownership. The ASF licenses this file to
	You under the Apache License, Version 2.0 (the "License"); you may not use
	this file except in compliance with the License. You may obtain a copy of
	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required
	by applicable law or agreed to in writing, software distributed under the
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
	OF ANY KIND, either express or implied. See the License for the specific
	language governing permissions and limitations under the License. --><!-- Note: A "Server" is not itself a "Container", so you may not define
	subcomponents such as "Valves" at this level. Documentation at /docs/config/server.html -->
<Server port="8004" shutdown="SHUTDOWN">

	<!--APR library loader. Documentation at /docs/apr.html -->
	<Listener SSLEngine="on"
		className="org.apache.catalina.core.AprLifecycleListener" />
	<!--Initialize Jasper prior to webapps are loaded. Documentation at /docs/jasper-howto.html -->
	<Listener className="org.apache.catalina.core.JasperListener" />
	<!-- Prevent memory leaks due to use of particular java/javax APIs -->
	<Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener" />
	<!-- JMX Support for the Tomcat server. Documentation at /docs/non-existent.html -->
	<Listener className="org.apache.catalina.mbeans.ServerLifecycleListener" />
	<Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener" />

	<!-- Global JNDI resources Documentation at /docs/jndi-resources-howto.html -->
	<GlobalNamingResources>
		<!-- Editable user database that can also be used by UserDatabaseRealm
			to authenticate users -->
		<Resource auth="Container" description="User database that can be updated and saved"
			factory="org.apache.catalina.users.MemoryUserDatabaseFactory" name="UserDatabase"
			pathname="conf/tomcat-users.xml" type="org.apache.catalina.UserDatabase" />
	</GlobalNamingResources>

	<!-- A "Service" is a collection of one or more "Connectors" that share
		a single "Container" Note: A "Service" is not itself a "Container", so you
		may not define subcomponents such as "Valves" at this level. Documentation
		at /docs/config/service.html -->
	<Service name="Catalina">

		<!--The connectors can use a shared executor, you can define one or more
			named thread pools -->
		<!-- <Executor name="tomcatThreadPool" namePrefix="catalina-exec-" maxThreads="150"
			minSpareThreads="4"/> -->


		<!-- A "Connector" represents an endpoint by which requests are received
			and responses are returned. Documentation at : Java HTTP Connector: /docs/config/http.html
			(blocking & non-blocking) Java AJP Connector: /docs/config/ajp.html APR (HTTP/AJP)
			Connector: /docs/apr.html Define a non-SSL HTTP/1.1 Connector on port 8080 -->
		<Connector connectionTimeout="20000" port="8070" protocol="HTTP/1.1"
			redirectPort="8443" />
		<!-- A "Connector" using the shared thread pool -->
		<!-- <Connector executor="tomcatThreadPool" port="8080" protocol="HTTP/1.1"
			connectionTimeout="20000" redirectPort="8443" /> -->
		<!-- Define a SSL HTTP/1.1 Connector on port 8443 This connector uses the
			JSSE configuration, when using APR, the connector should be using the OpenSSL
			style configuration described in the APR documentation -->
		<!-- <Connector port="8443" protocol="HTTP/1.1" SSLEnabled="true" maxThreads="150"
			scheme="https" secure="true" clientAuth="false" sslProtocol="TLS" /> -->

		<!-- Define an AJP 1.3 Connector on port 8009 -->
		<Connector port="8008" protocol="AJP/1.3" redirectPort="8443" />


		<!-- An Engine represents the entry point (within Catalina) that processes
			every request. The Engine implementation for Tomcat stand alone analyzes
			the HTTP headers included with the request, and passes them on to the appropriate
			Host (virtual host). Documentation at /docs/config/engine.html -->

		<!-- You should set jvmRoute to support load-balancing via AJP ie : <Engine
			name="Catalina" defaultHost="localhost" jvmRoute="jvm1"> -->
		<Engine defaultHost="localhost" name="Catalina">

			<!--For clustering, please take a look at documentation at: /docs/cluster-howto.html
				(simple how to) /docs/config/cluster.html (reference documentation) -->
			<!-- <Cluster className="org.apache.catalina.ha.tcp.SimpleTcpCluster"/> -->

			<!-- The request dumper valve dumps useful debugging information about
				the request and response data received and sent by Tomcat. Documentation
				at: /docs/config/valve.html -->
			<!-- <Valve className="org.apache.catalina.valves.RequestDumperValve"/> -->

			<!-- This Realm uses the UserDatabase configured in the global JNDI resources
				under the key "UserDatabase". Any edits that are performed against this UserDatabase
				are immediately available for use by the Realm. -->
			<Realm className="org.apache.catalina.realm.UserDatabaseRealm"
				resourceName="UserDatabase" />

			<!-- Define the default virtual host Note: XML Schema validation will
				not work with Xerces 2.2. -->
			<Host appBase="webapps" autoDeploy="true" name="localhost"
				unpackWARs="true" xmlNamespaceAware="false" xmlValidation="false">

				<!-- SingleSignOn valve, share authentication between web applications
					Documentation at: /docs/config/valve.html -->
				<!-- <Valve className="org.apache.catalina.authenticator.SingleSignOn"
					/> -->

				<!-- Access log processes all example. Documentation at: /docs/config/valve.html -->
				<!-- <Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs"
					prefix="localhost_access_log." suffix=".txt" pattern="common" resolveHosts="false"/> -->


				<Context docBase="TomSample25" path="/TomSample25"
					reloadable="true" source="org.eclipse.jst.jee.server:TomSample25" />
				<Context docBase="tomcat_sample" path="/tomcat_sample"
					reloadable="true" source="org.eclipse.jst.jee.server:tomcat_sample" />
				<Context docBase="tomcat_dbaccess" path="/tomcat_dbaccess"
					reloadable="true" source="org.eclipse.jst.jee.server:tomcat_dbaccess" />
				<!-- <Context docBase="Jndi_Sample" path="/Jndi_Sample"
					reloadable="true" source="org.eclipse.jst.jee.server:Jndi_Sample" /> -->

				<!-- 2014/06/26 Add_Start -->
				<Context docBase="Jndi_Sample" path="/Jndi_Sample"
					reloadable="true" source="org.eclipse.jst.jee.server:Jndi_Sample" >
					<Resource name="MySQL_JDBC" auth="Container" type="javax.sql.DataSource"
						driverClassName="org.gjt.mm.mysql.Driver" url="jdbc:mysql://192.168.189.128:3306/auth"
						username="user801" password="jndi" maxActive="20" maxIdle="30000"
						maxWait="100" />
				</Context>
				<!-- 2014/06/26 Add_End -->
				<!-- Tomcat Root Context -->
				<!-- <Context path="" docBase="ROOT" debug="0"/> -->
				<!-- 1.DefaultContextタグの追加 -->
				<!--  <DefaultContext>
					Context path="/javatips" docBase="javatips" debug="0" reloadable="false"
						crossContext="true"
					2.Resourceタグの追加
					<Resource name="MySQL_JDBC" auth="Container" type="javax.sql.DataSource" />
					3.ResourceParamsタグの追加
					<ResourceParams name="MySQL_JDBC">

						4.parameterタグの追加
						<parameter>
							<name>factory</name>
							<value>
								org.apache.commons.dbcp.BasicDataSourceFactory
							</value>
						</parameter>
						<parameter>
							<name>maxActive</name>
							<value>20</value>
						</parameter>
						<parameter>
							<name>maxIdle</name>
							<value>30000</value>
						</parameter>
						<parameter>
							<name>maxWait</name>
							<value>100</value>
						</parameter>
						<parameter>
							<name>username</name>
							<value>user801</value>
						</parameter>
						<parameter>
							<name>password</name>
							<value>jndi</value>
						</parameter>
						<parameter>
							<name>driverClassName</name>
							<value>org.gjt.mm.mysql.Driver</value>
						</parameter>
						<parameter>
							<name>url</name>
							<value>jdbc:mysql://192.168.189.128:3306/auth</value>
						</parameter>
					</ResourceParams>
				</DefaultContext>
 -->
			</Host>
		</Engine>
	</Service>
</Server>


